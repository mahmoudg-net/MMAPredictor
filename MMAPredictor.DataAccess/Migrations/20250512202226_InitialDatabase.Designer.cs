// <auto-generated />
using System;
using MMAPredictor.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MMAPredictor.DataAccess.Migrations
{
    [DbContext(typeof(MMAPredictorDbContext))]
    [Migration("20250512202226_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.Fight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fighter1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fighter2Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("Fighter1Id");

                    b.HasIndex("Fighter2Id");

                    b.ToTable("Fights");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.FightResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Result")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WinnerId");

                    b.ToTable("FightResults");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.FightRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FightId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FightId");

                    b.ToTable("FightRounds");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.Fighter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NbDraws")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbLoss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbWins")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Reach")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("StrikesAbsorbedByMinute")
                        .HasColumnType("REAL");

                    b.Property<float?>("StrikesAccuracy")
                        .HasColumnType("REAL");

                    b.Property<float?>("StrikesLandedByMinute")
                        .HasColumnType("REAL");

                    b.Property<float?>("StrikingDefenseAccuracy")
                        .HasColumnType("REAL");

                    b.Property<float?>("SubmissionsAverage")
                        .HasColumnType("REAL");

                    b.Property<float?>("TakedownAccuracy")
                        .HasColumnType("REAL");

                    b.Property<float?>("TakedownAverage")
                        .HasColumnType("REAL");

                    b.Property<float?>("TakedownDefenseAccuracy")
                        .HasColumnType("REAL");

                    b.Property<int?>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Fighters");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.MmaEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MmaEvents");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.Fight", b =>
                {
                    b.HasOne("MMAPredictor.DataAccess.Entities.MmaEvent", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MMAPredictor.DataAccess.Entities.Fighter", "Fighter1")
                        .WithMany()
                        .HasForeignKey("Fighter1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MMAPredictor.DataAccess.Entities.Fighter", "Fighter2")
                        .WithMany()
                        .HasForeignKey("Fighter2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Fighter1");

                    b.Navigation("Fighter2");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.FightResult", b =>
                {
                    b.HasOne("MMAPredictor.DataAccess.Entities.Fighter", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.FightRound", b =>
                {
                    b.HasOne("MMAPredictor.DataAccess.Entities.Fight", null)
                        .WithMany("Rounds")
                        .HasForeignKey("FightId");
                });

            modelBuilder.Entity("MMAPredictor.DataAccess.Entities.Fight", b =>
                {
                    b.Navigation("Rounds");
                });
#pragma warning restore 612, 618
        }
    }
}
